type: vertical-stack
cards:
  - type: custom:bubble-card
    card_type: pop-up
    hash: "#notifications"
    margin_top_mobile: calc(100vh - 450px)
    name: Notifications
    icon: mdi:bell
    styles: |
      * {
        font-size: 16px !important;
      }
      .bubble-button-card-container {
        background: transparent !important;
      }      
      .bubble-icon-container {
        background: transparent !important;
      }
  - type: custom:mushroom-chips-card
    chips:
      - type: conditional
        conditions:
          - condition: state
            entity: input_boolean.away_mode
            state: "on"
        chip:
          type: template
          icon: mdi:home-export-outline
          icon_color: "#52b2bf"
          content: "{{ 'Away' if states('input_boolean.away_mode') == 'on' else '' }}"
          entity: input_boolean.away_mode
          tap_action:
            action: toggle
      - type: conditional
        conditions:
          - condition: numeric_state
            entity: sensor.soil_sensor_corner_moisture
            below: 40
        chip:
          type: template
          entity: sensor.soil_sensor_corner_moisture
          icon: mdi:water-percent
          content: "{{ states('sensor.soil_sensor_corner_moisture') }}%"
          icon_color: >
            {% set moisture = states('sensor.soil_sensor_corner_moisture') |
            int(0) %} {% if moisture >= 40 %}
              green
            {% elif moisture >= 25 %}
              yellow
            {% else %}
              red
            {% endif %}
          tap_action:
            action: more-info
      - type: conditional
        conditions:
          - entity: sensor.house_maintenance_chip_card
            state: "true"
        chip:
          type: template
          icon: |
            {% if is_state('input_boolean.rubbish', 'on') %}
              mdi:trash-can
            {% elif is_state('input_boolean.recycle', 'on') %}
              mdi:recycle
            {% else %} {% endif %}
          icon_color: |
            {% if is_state('input_boolean.rubbish', 'on') %}
              #C41E3A
            {% elif is_state('input_boolean.recycle', 'on') %}
              #50C878
            {% else %} {% endif %}
          content: |
            {% if is_state('input_boolean.rubbish', 'on') %}
              Rubbish Day
            {% elif is_state('input_boolean.recycle', 'on') %}
              Recycle Day
            {% else %} {% endif %}       
      - type: conditional
        conditions:
          - condition: state
            entity: binary_sensor.door_sensor_grg_contact
            state: "on"
        chip:
          type: template
          icon: mdi:garage-variant
          icon_color: red
          content: >-
            {{ 'Garage Opened' if
            states('binary_sensor.door_sensor_grg_contact') == 'on' else '' }}
          entity: binary_sensor.door_sensor_grg_contact
          tap_action:
            action: navigate
            navigation_path: /mobile-light/camera
      - type: conditional
        conditions:
          - condition: state
            entity: binary_sensor.all_doors
            state: "on"
        chip:
          type: template
          content: |
            {{ expand(states.binary_sensor.all_doors) 
                | selectattr('state', 'eq', 'on') 
                | map(attribute='name') 
                | join(', ') }}
          icon: |-
            {% set open_doors = expand(states.binary_sensor.all_doors) 
                | selectattr('state', 'eq', 'on') 
                | list | count %}
            {{ 'mdi:door-sliding-open' if open_doors > 0 else '' }}
          icon_color: red
      - type: conditional
        conditions:
          - condition: state
            entity: sensor.laundry_machine_state
            state: Delay Run
        chip:
          type: entity
          entity: sensor.laundry_delay_time_remaining
          icon_color: blue
          icon: ""
      - type: conditional
        conditions:
          - condition: state
            entity: sensor.laundry_machine_state
            state: Run
        chip:
          type: entity
          entity: sensor.laundry_time_remaining
          icon_color: blue
          icon: ""
      - type: conditional
        conditions:
          - condition: numeric_state
            entity: sensor.dryer_switch_lr_power
            above: 10
        chip:
          type: template
          tap_action:
            action: none
          hold_action:
            action: none
          double_tap_action:
            action: none
          icon: mdi:tumble-dryer
          icon_color: "#880808"
          content: Dryer Running
      - type: conditional
        conditions:
          - condition: or
            conditions:
              - condition: state
                entity: media_player.all_speakers
                state: playing
              - condition: state
                entity: media_player.all_speakers
                state: "on"
        chip:
          type: template
          content: |
            {{ expand(states.media_player.all_speakers)
                | selectattr('state', 'eq', 'playing')
                | list | count }}
          icon: mdi:music
          icon_color: black
  - type: conditional
    conditions:
      - condition: state
        entity: media_player.input_your_media_here
        state: playing
    card:
      type: vertical-stack
      cards:
        - type: custom:stack-in-card
          cards:
            - type: custom:mushroom-media-player-card
              entity: media_player.spotify_reynaldi_sutrisno
              icon: mdi:play
              name: Media Player
              use_media_info: true
              use_media_artwork: false
              show_volume_level: false
              media_controls:
                - play_pause_stop
                - previous
                - next
              volume_controls:
                - volume_buttons
                - volume_set
              fill_container: false
              collapsible_controls: true
              tap_action:
                action: none
              layout: vertical
              card_mod:
                style:
                  mushroom-media-player-volume-control$: |
                    mushroom-slider {
                      --main-color: #cccccc !important;
                      --bg-color: rgb(var(--album-art-color)) !important;
                    }
                  .: |
                    mushroom-shape-icon {
                      display: flex;
                      {% set media_type = state_attr(config.entity, 'media_content_type') %}
                      {% if media_type == 'tvshow' %}
                        --card-mod-icon: mdi:television-classic;
                        animation: flicker 1s linear infinite alternate;
                      {% elif media_type == 'movie' %}
                        --card-mod-icon: mdi:movie-roll;
                        animation: spin 2s linear infinite reverse;
                      {% elif media_type == 'music' %}
                        --card-mod-icon: mdi:music;
                        animation: beat 1.3s ease-out infinite both;
                      {% elif media_type == 'playlist' %}
                        --card-mod-icon: mdi:music;
                        animation: beat 1.3s ease-out infinite both;
                      {% else %}
                        --card-mod-icon: mdi:play;
                      {% endif %}

                      {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                    }
                    @keyframes flicker {
                      0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--album-art-color), 1); }
                      32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--album-art-color), 0.6); }
                    }
                    @keyframes beat {
                      0%, 60% { --icon-symbol-size: 21px; }
                      5%, 17%, 57% { --icon-symbol-size: 22px; }
                      10%, 20%, 51% { --icon-symbol-size: 23px; }
                      25%, 45% { --icon-symbol-size: 24px; }
                      30%, 39% { --icon-symbol-size: 25px; }
                      33% { --icon-symbol-size: 26px; }
                    }
                    .: |
                      mushroom-shape-icon {

                        /* Change media player icon based on media type */
                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                        --card-mod-icon:
                        {% if media_type == 'tvshow' %}
                           mdi:television-classic
                        {% elif media_type == 'movie' %}
                          mdi:movie-roll
                        {% elif media_type == 'music' %}
                          mdi:music
                        {% elif media_type == 'playlist' %}
                          mdi:music
                        {% else %}
                          mdi:play
                        {% endif %};
                      }
                      ha-card {

                        /* Remove border from media player */
                        --ha-card-border-width: 0;

                        /* Apply album art color to media player icon & volume bar */
                        --rgb-state-media-player: var(--album-art-color);

                        /* Disable transitions */
                        transition: all 0s;
                      }
                      .actions {

                        /* Apply to controls only when active */
                        {% if is_state(config.entity, ['playing', 'paused']) %}

                          /* Apply album art color to media player controls */
                          --rgb-primary-text-color: var(--album-art-color);
                          --primary-text-color: rgb(var(--album-art-color));

                          /* Add space for progress bar */
                          padding-top: 24px;
                        {% endif %}
                      }
            - entity: media_player.spotify_reynaldi_sutrisno
              hide:
                icon: true
                name: true
                runtime: true
                source: true
                power: true
                state_label: true
                volume: true
                info: true
                progress: false
                controls: true
              more_info: false
              type: custom:mini-media-player
              toggle_power: false
              group: true
              card_mod:
                style:
                  mmp-progress$: |
                    paper-progress {

                      /* Hide the progress bar when not playing or paused */
                      {{ 'display: none;' if not is_state(config.entity, ['playing', 'paused']) }}

                      /* Apply album art color to progress bar when paused */
                      --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;
                      
                      /* Apply album art color to progress bar when playing */
                      --paper-progress-active-color: rgb(var(--album-art-color)) !important;
                    }
                  .: |
                    ha-card {
                      
                      /* Move progress bar up into gap */
                      bottom: calc(3 * var(--mush-spacing, 12px) + var(--mush-control-height, -25px));
                      
                      /* Correct margins for progress bar */
                      margin: 0px calc(1.618 * var(--mush-spacing, 12px)) calc(-1 * var(--mush-spacing, 12px));

                      /* Set height of card to match pregress bar height */
                      height: var(--mmp-progress-height);

                      /* Remove border outline */
                      --ha-card-border-width: 0;

                      /* Round corners of progress bar */
                      --mmp-border-radius: var(--control-border-radius, 12px) !important;

                      /* Set height of progress bar */
                      --mmp-progress-height: var(--mush-spacing, 12px) !important;

                      /* Remove transitions to prevent progress bar floating in */
                      transition: all 0s;
                    }
          card_mod:
            style: |
              ha-card:before {
                content: "";
                
                /* Position and size background color */
                position: absolute;
                height: 100%;
                width: 100%;

                /* Apply background to media player using album art color */
                {% if is_state('media_player.spotify_reynaldi_sutrisno', ['playing', 'paused']) %}
                  background: rgba({{ states('sensor.spotify_reynaldi_sutrisno_dark_vibrant_color') }}, 0.3);
                {% endif %}
                
              }
              ha-card {

                /* Apply blended album art background */
                {% if is_state('media_player.spotify_reynaldi_sutrisno', ['playing', 'paused']) %}
                  background: url( '{{ state_attr("media_player.spotify_reynaldi_sutrisno", "entity_picture") }}' ) no-repeat, 
                              linear-gradient(to left, transparent, rgb(var(--rgb-card-background-color)) 50%);

                  /* Adjust for different aspect ratio of TV shows episode art */
                  {% if state_attr('media_player.spotify_reynaldi_sutrisno', 'media_content_type') == 'tvshow' %}
                    background-size: 50% 100%, cover;
                  {% else %}
                    background-size: 50% auto, cover;
                  {% endif %}

                  /* Position art on right side */
                  background-position: right;

                  /* Blend art with background using saturation */
                  background-blend-mode: saturation;
                {% endif %}
              }
              :host {

                /* Assign album art color to variable used in media player. Default to indigo when idle */
                --album-art-color:      
                {% if is_state('media_player.spotify_reynaldi_sutrisno', ['playing', 'paused']) %}
                  {{ states('sensor.spotify_reynaldi_sutrisno_muted_color') }}
                {% else %}
                  var(--mush-rgb-indigo, 63, 81, 181)
                {% endif %};
              }
      title: Media
  - type: conditional
    conditions:
      - condition: or
        conditions:
          - condition: state
            entity: media_player.all_speakers
            state: playing
          - condition: state
            entity: media_player.all_speakers
            state: "on"
    card:
      type: custom:mushroom-template-card
      entity: media_player.all_speakers
      icon: ""
      secondary: >
        {% set speakers = state_attr('media_player.all_speakers', 'entity_id')
        %}

        {% set playing_count = speakers | select('is_state', 'playing') | list |
        length %}

        {{ playing_count }} speaker{{ 's' if playing_count != 1 else '' }} {{
        'are' if playing_count != 1 else 'is' }} playing
      tap_action:
        action: none
      primary: ""
  - type: horizontal-stack
    cards:
      - type: conditional
        conditions:
          - condition: state
            entity: timer.wash_cuddly
            state: idle
        card:
          type: custom:button-card
          entity: input_boolean.wash_cuddly
          name: Cuddly Needs Wash
          tap_action:
            action: toggle
          styles:
            grid:
              - grid-template-columns: 64px 1fr
              - grid-template-areas: "\" i n \""
            card:
              - background: none
              - height: 75px
            img_cell:
              - width: 22px
            icon:
              - width: 22px
              - color: "#000000"
            name:
              - justify-self: start
              - font-size: 14px
              - font-weight: 400
              - color: "#000000"
          state:
            - value: "on"
              styles:
                card:
                  - background: "#f3c843"
      - type: conditional
        conditions:
          - condition: state
            entity: timer.wash_duvet
            state: idle
        card:
          type: custom:button-card
          entity: input_boolean.wash_duvet
          name: Duvet Needs Wash
          tap_action:
            action: toggle
          styles:
            grid:
              - grid-template-columns: 64px 1fr
              - grid-template-areas: "\" i n \""
            card:
              - background: none
              - height: 75px
            img_cell:
              - width: 22px
            icon:
              - width: 22px
              - color: "#000000"
            name:
              - justify-self: start
              - font-size: 14px
              - font-weight: 400
              - color: "#000000"
          state:
            - value: "on"
              styles:
                card:
                  - background: "#f3c843"
